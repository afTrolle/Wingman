syntax = "proto2";

package com.tinder.data;

option optimize_for = LITE_RUNTIME;
option java_outer_classname = "TinderProto";
option java_package = "com.tinder.data.generated.proto";

message Gender {
    required int32 gender = 1;
    optional string customGender = 2;
}

message Photos {
    repeated Photo photos = 1;
}

message Photo {
    required string url = 1;
    
    repeated Render renders = 2;
    message Render {
        required int32 width = 1;
        required int32 height = 2;
        required string url = 3;
    }
    
    required string id = 3;
    
    repeated Video videos = 4;
    message Video {
        required int32 width = 1;
        required int32 height = 2;
        required string url = 3;
        optional int64 durationMs = 4;
    }
    
    optional bool isOnlyVisibleToMatches = 6;
    optional MediaTemplate mediaTemplate = 7;
    
    optional CropInfo cropInfo = 8;
    message CropInfo {
        optional Coordinates userCustomizedCoordinates = 1;
        message Coordinates {
            optional double xOffsetPercentage = 1;
            optional double yOffsetPercentage = 2;
            optional double widthPercentage = 3;
            optional double heightPercentage = 4;
        }
        
        optional Coordinates autoGeneratedCoordinates = 2;
        optional int32 facesCount = 3;
    }
    
    repeated Asset assets = 9;
    message Asset {
        required Type type = 1;
        enum Type {
            PHOTO = 0;
            LOOP = 1;
            SHORT_VIDEO = 2;
        }
        
        required string url = 2;
        required int32 width = 3;
        required int32 height = 4;
        optional bool hasAudio = 5 [default = false];
    }
    
    optional string replaced_media_id = 10;
    
    reserved 5;
}

message NullPhoto {
    
}

message Badges {
    repeated Badge badges = 1;
}

message Badge {
    required string type = 1;
    required string description = 2;
    required string color = 3;
}

message Jobs {
    repeated Job jobs = 1;
}

message Job {
    optional string companyId = 1;
    optional string companyName = 2;
    optional bool companyDisplayed = 3;
    optional string titleId = 4;
    optional string titleName = 5;
    optional bool titleDisplayed = 6;
}

message Schools {
    repeated School schools = 1;
}

message School {
    optional string name = 1;
    optional string id = 2;
    optional bool displayed = 3;
}

message City {
    required string name = 1;
    optional string region = 2;
}

message Tags {
    repeated Tag tags = 1;
}

message Tag {
    required string id = 1;
    required string name = 2;
    required string region = 3;
}

message LikedContent {
    required string userId = 1;
    optional int32 reactionId = 3;
    optional string swipeNote = 4;
    optional bool isSwipeNote = 5;
    
    oneof type {
        Photo photo = 2;
        NullPhoto nullPhoto = 6;
    }
}

message TextPrompt {
    required string id = 1;
    required string version = 2;
    optional string answer = 3;
    optional string campaignId = 4;
    optional string backgroundImageUrl = 5;
    repeated string gradient = 6;
    required string promptTitle = 7;
}

message PhotoPrompt {
    required string id = 1;
    required string version = 2;
    optional string answer = 3;
    optional string campaignId = 4;
    required string promptTitle = 5;
}

message MemePrompt {
    required string id = 1;
    required string version = 2;
    optional string campaignId = 3;
    required string promptTitle = 4;
}

message Prompt {
    oneof type {
        TextPrompt textPrompt = 1;
        PhotoPrompt photoPrompt = 2;
        MemePrompt memePrompt = 3;
    }
}

message MediaTemplate {
    oneof type {
        Prompt prompt = 1;
    }
}

message SexualOrientations {
    repeated SexualOrientation sexualOrientations = 1;
}

message SexualOrientation {
    required string id = 1;
    required string name = 2;
}

message UserProfileDescriptor {
    repeated ProfileDescriptor selectedDescriptors = 1;
    repeated ProfileDescriptorSection descriptorSections = 2;
}

message ProfileDescriptorSection {
    required SectionInfo sectionInfo = 1;
    repeated ProfileDescriptor descriptors = 2;
}

message ProfileDescriptor {
    required string id = 1;
    required string name = 2;
    required string iconUrl = 3;
    
    required Type type = 4;
    enum Type {
        AVAILABLE = 0;
        SELECTED = 1;
    }
    
    required SelectionType selectionType = 5;
    enum SelectionType {
        SINGLE = 0;
        MULTI = 1;
        MEASUREMENT = 2;
    }
    
    required string prompt = 6;
    optional string visibility = 7;
    optional MeasurableSelection measurableSelection = 8;
    optional MeasurableDetail measurableDetail = 9;
    repeated Choice selectedChoices = 10;
    repeated Choice choices = 11;
    required SectionInfo sectionInfo = 12;
    required string backgroundText = 13;
}

message MeasurableSelection {
    required int32 value = 1;
    required string unitOfMeasure = 2;
}

message MeasurableDetail {
    required int32 min = 1;
    required int32 max = 2;
    required string unitOfMeasure = 3;
}

message Choice {
    required string id = 1;
    required string name = 2;
}

message SectionInfo {
    required string sectionId = 1;
    required string sectionName = 2;
}
