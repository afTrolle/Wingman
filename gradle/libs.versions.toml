[versions]
# Libs & Plugins
conscryptAndroid = "2.2.1"
coreSplashscreen = "1.0.1"
kotlin = "1.8.20"
ktor = "2.3.2"
datetime = "0.4.0"
material = "1.9.0"
serialization = "1.5.1"
coroutines = "1.7.2"
openai = "3.3.1"
agp = "8.1.0-rc01"
compose = "1.4.1"
slf4jSimple = "2.0.6"
voyager = "1.0.0-rc06"
koin = "3.4.1"
accompanist = "0.30.1"
napier = "2.6.1"
settings = "1.0.0"
image = "1.5.2"
buildconfig = "3.1.0"
ktlint = "11.4.2"
ksp = "1.8.20-1.0.11"
lyricist = "1.4.1" # https://github.com/adrielcafe/lyricist
atomicfu = "0.20.2"
stately = "2.0.0-rc3"
# Config
compileSdk = "33"
minSdk = "28"
iosTarget = "14.1"
appVersion = "1.0"
buildVersion = "1"

[libraries]
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
conscrypt-android = { module = "org.conscrypt:conscrypt-android", version.ref = "conscryptAndroid" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-common = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlin" }
kotlin-test-annotations-common = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "serialization" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-play = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-atomicfu = "org.jetbrains.kotlinx:atomicfu:0.21.0"

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization-protobuf = { module = "io.ktor:ktor-serialization-kotlinx-protobuf", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

material = { module = "com.google.android.material:material", version.ref = "material" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4jSimple" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
voyager-tab = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = "io.insert-koin:koin-compose:1.0.3"

androidx-activity-compose = "androidx.activity:activity-compose:1.7.2"
androidx-appcompat = "androidx.appcompat:appcompat:1.6.1"
androidx-core = "androidx.core:core-ktx:1.10.1"
androidx-datastore-preferences = "androidx.datastore:datastore-preferences:1.0.0"
androidx-annotation = "androidx.annotation:annotation:1.7.0-alpha02"

settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }
settings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "settings" }
settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "settings" }
settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }

lyricist-library = { module = "cafe.adriel.lyricist:lyricist", version.ref = "lyricist" }
lyricist-processor = { module = "cafe.adriel.lyricist:lyricist-processor", version.ref = "lyricist" }
lyricist-processorXml = { module = "cafe.adriel.lyricist:lyricist-processor-xml", version.ref = "lyricist" }

insetsx = "com.moriatsushi.insetsx:insetsx:0.1.0-alpha10"
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }

stately-core = { module = "co.touchlab:stately-concurrency", version.ref = "stately" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "stately" }
stately-collection = { module = "co.touchlab:stately-concurrent-collections", version.ref = "stately" }

libphonenumber = "com.googlecode.libphonenumber:libphonenumber:8.13.15"
play-services-auth = "com.google.android.gms:play-services-auth:20.6.0"
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
openai-client = { module = "com.aallam.openai:openai-client", version.ref = "openai" }
image-loader-core = { module = "io.github.qdsfdhvh:image-loader", version.ref = "image" }

# Gradle plugin depencies
gradlePlugin-android-application = { module = "com.android.application:com.android.application.gradle.plugin", version.ref = "agp" }
gradlePlugin-android-library = { module = "com.android.library:com.android.library.gradle.plugin", version.ref = "agp" }
gradlePlugin-google-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
gradlePlugin-kotlin-android = { module = "org.jetbrains.kotlin.android:org.jetbrains.kotlin.android.gradle.plugin", version.ref = "kotlin" }
gradlePlugin-kotlin-multiplatform = { module = "org.jetbrains.kotlin.multiplatform:org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "kotlin" }
gradlePlugin-kotlin-cocoapods = { module = "org.jetbrains.kotlin.native.cocoapods:org.jetbrains.kotlin.native.cocoapods.gradle.plugin", version.ref = "kotlin" }
gradlePlugin-kotlin-serialization = { module = "org.jetbrains.kotlin.plugin.serialization:org.jetbrains.kotlin.plugin.serialization.gradle.plugin", version.ref = "kotlin" }
gradlePlugin-jetbrains-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }
gradlePlugin-buildconfig = { module = "com.github.gmazzo.buildconfig:com.github.gmazzo.buildconfig.gradle.plugin", version.ref = "buildconfig" }
gradlePlugin-ktlint = { module = "org.jlleitschuh.gradle.ktlint:org.jlleitschuh.gradle.ktlint.gradle.plugin", version.ref = "ktlint" }
gradlePlugin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "atomicfu" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
google-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
atomicfu = { id = "kotlinx-atomicfu", version.ref = "atomicfu" }
# Custom plugins
feature = { id = "feature-plugin" }
library = { id = "library-plugin" }
base = { id = "base-plugin" }
